AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template is used to deploy a simple vpc that is partitioned
  in a private and public network, with a configured NAT gateway for     
  the private network and an internet gateway for the public
  network.


# Parameters help customise the behaviour of the cloud formation 
# template. In this case we use parameters to customise the CIDR
# blocks of the VPC we are building and associated subnets.
#
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR Block for the Virtual Private Cloud
  PublicSubnetCidrBlock1:
    Type: String
    Default: 10.0.0.0/24
    Description: CIDR Block for the first Public Subnet
  PublicSubnetCidrBlock2:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR Block for the second Public Subnet
  PublicSubnetAZ1:
    Type: String
    Default: ap-south-1a
    Description: Designated Avalability Zone for the first Public Subnet
  PublicSubnetAZ2:
    Type: String
    Default: ap-south-1b
    Description: Designated Avalability Zone for the second Public Subnet
  PrivateSubnetCidrBlock1:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR Block for the First Private Subnet Segment
  PrivateSubnetCidrBlock2:
    Type: String
    Default: 10.0.3.0/24
    Description: CIDR Block for the Second Private Subnet Segment
  PrivateSubnetAZ1:
    Type: String
    Default: ap-south-1a
    Description: First Avalability Zone for the Private Subnet Segment
  PrivateSubnetAZ2:
    Type: String
    Default: ap-south-1b
    Description: Second Avalability Zone for the Private Subnet Segment
  
# Resources define the entities that the template is composed of that represent
# infrastructure and services that will be deployed with the stack.
# 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # VPC. This is the main component of our template, within the VPC we will be defining the subnets and
  # connect to it all components required to create the stack.
  #
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-VPC"]]
  # Subnets Definition: in this section we define the two subnets public and private
  # and also create an ElasticIP and a NAT gateway to attach it to the private network
  # so that we can have an outgoing traffic to add patches to the instances within the
  # private subnet.
  #
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PublicSubnetAZ1
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidrBlock1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Pub-SubNet1"]]
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PublicSubnetAZ2
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidrBlock2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Pub-SubNet2"]]
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PrivateSubnetAZ1
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidrBlock1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Priv-SubNet1"]]
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PrivateSubnetAZ2
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidrBlock2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Priv-SubNet2"]]
# Internet Gateway. This component provides internet connectivity to the internet both ways (in and out).
# The gatewat needs to be attached to a VPC. Therefore it is important to explicitly attach it to the
# VPC otherwise it won't be connected.
#
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-IGW"]]
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Pub-RTB"]]
  # This route enables the in-out traffic from the VPC to the internet via the specified Internet 
  # Gateway. The route is part of the PublicRouteTable which is assigned to the VPC. The section
  # DependsOn is VERY IMPORTANT as CloudFormation may decide to use a different order of creation
  # and we may get errors like "Route table X and internet gateway Y do not belong to the same network".
  RouteTrafficToIGW:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGateway
      - AttachGateway
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # ElasticIP definition, we don't need to add many attributes here, simply let Amazon do the
  # work for you, we will only need to reference the elastic IP in the gateway.
  #
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-elasticip.html
  ElasticIPAddress1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-NGW-EIP1"]]
  ElasticIPAddress2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-NGW-EIP2"]]
  # NAT Gateway. This component requires two references an allocation fo the elastic IP address to
  # use and a designated subnet to be attached to.
  #
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
  NatGateway1:  
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt ElasticIPAddress1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags: 
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-NGW1"]]
  NatGateway2:  
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt ElasticIPAddress2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags: 
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-NGW2"]]
  # Routing Tables. The route tables are the logical components that enable the routing of traffic
  # within the network, subnets included.
  #
  # Used Definitions:
  #
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
  #
  # Private Route Table. This is the route table that contains the routes for the private subnet.
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Priv-RTB1"]]
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-Priv-RTB2"]]
  # This route enables the outgoing internet traffic from the private subnet to the Internet and
  # it is used for patches downloading and access to external services as needed.
  RouteTrafficToNGW1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock:  0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  RouteTrafficToNGW2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock:  0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  # Route Table Associations. The associations are necessary to map the route tables to subnets
  # so that traffic can be effectively routed through the components hosted in these networks
  # and desired network destinations.
  #
  # Definitions:
  # 
  # https://docs.amazonaws.cn/en_us/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
  # 
  PublicSubnetRouteTableAssociation1:   
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociation2:   
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetRouteTableAssociation1:   
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnetRouteTableAssociation2:   
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

# Outputs define values exported by the template that can be used and captured
# by other templates.
#
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
Outputs:
  VpcId:
    Description: Unique identifier of the VPC 
    Value: !Ref VPC
  PublicSubnetId1:
    Description: Unique identifier of the first Public Subnet of the VPC
    Value: !Ref PublicSubnet1
  PublicSubnetId2:
    Description: Unique identifier of the second Public Subnet of the VPC
    Value: !Ref PublicSubnet2
  PrivateSubnetId1:
    Description: Unique identifier of the First Private Subnet segment of the VPC
    Value: !Ref PrivateSubnet1
  PrivateSubnetId2:
    Description: Unique identifier of the Second Private Subnet segment of the VPC
    Value: !Ref PrivateSubnet2
